@page "/rota"
@attribute [Authorize(Roles = "Worker")]
@using Syncfusion.Blazor.Schedule
@using MyRota.Models
@using MyRota.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.AspNetCore.Http


@inject ApplicationDbContext context
@inject UserManager<Employee> _userManager
@inject SignInManager<Employee> _signInManager
@inject AuthenticationStateProvider _authState

<h3>Rota</h3>

<AuthorizeView Roles="Worker">
    <Authorized>
        @*<SfSchedule TValue="Shift" Height="650px" SelectedDate="@DateTime.Today">
            <ScheduleEventSettings DataSource="@Employee.Shifts"></ScheduleEventSettings>
        </SfSchedule>*@

        @if (Employee == null)
        {
            <p>No user found.</p>
        }
        else
        {
            if (Employee.Shifts.Count > 0)
            {
                foreach (var s in ShiftsList)
                {
                    <h2>@s</h2>
                }
            }
            else
            {
                <p>No shifts to display.</p>
            }

        }

    </Authorized>
    <NotAuthorized>
        <h1>You are not authorized!</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    public Employee Employee { get; set; }
    public List<Shift> ShiftsList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await _authState.GetAuthenticationStateAsync();
        var user = state.User;
        Employee = await _userManager.GetUserAsync(user);
        ShiftsList = Employee.Shifts;
    }


}
